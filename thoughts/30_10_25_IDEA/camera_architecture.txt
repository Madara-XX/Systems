CAMERA SYSTEM ARCHITECTURE DIAGRAM
====================================

Component Structure:
┌─────────────────────────────────────────────────────────────────┐
│                      Main Camera GameObject                      │
│  ┌────────────────────┐         ┌─────────────────────────┐    │
│  │   Camera (Unity)   │         │   CameraController      │    │
│  │                    │         │   (MonoBehaviour)       │    │
│  │  - FOV             │◄────────┤                         │    │
│  │  - Orthographic    │         │   References:           │    │
│  │  - Near/Far Clip   │         │   - playerTransform     │    │
│  └────────────────────┘         │   - settings            │    │
│                                  │                         │    │
│                                  │   Runtime State:        │    │
│                                  │   - currentPreset       │    │
│                                  │   - targetPreset        │    │
│                                  │   - currentZoom         │    │
│                                  │   - positionVelocity    │    │
│                                  │   - rotationVelocity    │    │
│                                  │                         │    │
│                                  │   Public API:           │    │
│                                  │   - SetPreset()         │    │
│                                  │   - SetZoom()           │    │
│                                  │   - SetPlayer()         │    │
│                                  └─────────────┬───────────┘    │
└────────────────────────────────────────────────┼────────────────┘
                                                 │
                                                 │ References
                                                 ▼
                   ┌─────────────────────────────────────────────┐
                   │      CameraSettings (ScriptableObject)      │
                   │                                             │
                   │   Presets Array:                            │
                   │   ┌───────────────────┐                    │
                   │   │ [0] Top View      │                    │
                   │   ├───────────────────┤                    │
                   │   │ [1] Top View      │                    │
                   │   │     Follow        │                    │
                   │   ├───────────────────┤                    │
                   │   │ [2] Third Person  │                    │
                   │   ├───────────────────┤                    │
                   │   │ [3] Isometric     │                    │
                   │   ├───────────────────┤                    │
                   │   │ [4] Dynamic       │                    │
                   │   └───────────────────┘                    │
                   │                                             │
                   │   Input Settings:                           │
                   │   - cycleCameraKey                          │
                   │   - scrollSensitivity                       │
                   │   - transitionSpeed                         │
                   │                                             │
                   │   Debug Settings:                           │
                   │   - showDebugGizmos                         │
                   │   - gizmoColor                              │
                   └─────────────────────┬───────────────────────┘
                                         │
                                         │ Contains
                                         ▼
                   ┌─────────────────────────────────────────────┐
                   │      CameraPreset (Data Class)              │
                   │                                             │
                   │   Position Settings:                        │
                   │   - offset (Vector3)                        │
                   │   - rotation (Vector3)                      │
                   │   - followPlayerRotation (bool)             │
                   │   - lookAtOffset (Vector3)                  │
                   │                                             │
                   │   Follow Settings:                          │
                   │   - positionFollowSpeed                     │
                   │   - rotationFollowSpeed                     │
                   │   - useSmoothDamping                        │
                   │                                             │
                   │   Camera Settings:                          │
                   │   - isOrthographic                          │
                   │   - fieldOfView                             │
                   │   - orthographicSize                        │
                   │                                             │
                   │   Zoom Settings:                            │
                   │   - allowZoom                               │
                   │   - minZoom / maxZoom                       │
                   │   - zoomSpeed                               │
                   │                                             │
                   │   Boundary Settings:                        │
                   │   - useBoundaries                           │
                   │   - minBoundary / maxBoundary               │
                   └─────────────────────────────────────────────┘


Data Flow per Frame:
═══════════════════════════════════════════════════════════════════

1. Player.Update()
   └─► Player moves and rotates
       │
       ▼
2. CameraController.LateUpdate()
   │
   ├─► HandleInput()
   │   ├─ Check for preset switch (C key)
   │   └─ Check for zoom input (mouse scroll)
   │
   ├─► UpdatePresetTransition()
   │   └─ Interpolate between current and target preset
   │
   ├─► UpdateCameraTransform()
   │   │
   │   ├─► Calculate target position
   │   │   ├─ Start with player position
   │   │   ├─ Add preset offset * zoom
   │   │   ├─ Rotate offset if followPlayerRotation
   │   │   └─ Apply boundary constraints if enabled
   │   │
   │   ├─► Smooth position following
   │   │   ├─ SmoothDamp (physics-based)
   │   │   └─ OR Lerp (constant speed)
   │   │
   │   ├─► Calculate target rotation
   │   │   ├─ Fixed rotation OR
   │   │   └─ Player rotation + offset
   │   │
   │   └─► Smooth rotation following
   │       └─ Quaternion.Slerp
   │
   └─► ApplyCameraSettings()
       ├─ Set orthographic or perspective
       ├─ Update FOV or orthographic size
       └─ Apply to Camera component
       │
       ▼
3. Unity Rendering
   └─► Scene rendered from camera position


Preset Transition Flow:
═══════════════════════════════════════════════════════════════════

User Input (C key) or SetPreset() call
│
├─► Store target preset
├─► Reset transition progress to 0
├─► Reset zoom to 1.0
│
▼
Each frame while transitioning:
│
├─► Update progress (Time.deltaTime * transitionSpeed)
├─► Clamp to [0, 1]
├─► Apply SmoothStep curve
│
├─► Interpolate all values:
│   ├─ offset
│   ├─ rotation
│   ├─ lookAtOffset
│   ├─ positionFollowSpeed
│   ├─ rotationFollowSpeed
│   ├─ fieldOfView
│   └─ orthographicSize
│
└─► Switch boolean values at 50% progress:
    ├─ followPlayerRotation
    ├─ isOrthographic
    ├─ useSmoothDamping
    └─ allowZoom
│
▼
Transition complete (progress = 1.0)
└─► Lock to target preset


Zoom System:
═══════════════════════════════════════════════════════════════════

Mouse Scroll Input
│
├─► Read scroll delta
├─► Multiply by sensitivity
├─► Apply to currentZoom
└─► Clamp to [minZoom, maxZoom]
│
▼
Position Calculation
│
├─► baseOffset = preset.offset
├─► zoomedOffset = baseOffset * currentZoom
└─► Apply to camera position
│
▼
Camera Component Update
│
├─ Perspective: Position changes (moves closer/farther)
└─ Orthographic: Size changes (view area grows/shrinks)


Integration with Player:
═══════════════════════════════════════════════════════════════════

┌──────────────────┐
│  Player          │
│  GameObject      │
└────────┬─────────┘
         │
         │ Transform reference
         │ (position + rotation)
         │
         ▼
┌──────────────────┐
│  CameraController│
│                  │
│  Reads:          │
│  - position      │
│  - rotation      │
│                  │
│  No dependencies │
│  on player code! │
└──────────────────┘


Optional Event Integration:
═══════════════════════════════════════════════════════════════════

┌──────────────────┐
│  PlayerEvents    │
│  (Static)        │
│                  │
│  - OnBoost       │─────┐
│  - OnDamage      │─────┤
│  - OnDeath       │─────┤
└──────────────────┘     │
                         │ Subscribe
                         ▼
                  ┌──────────────────┐
                  │  CameraController│
                  │                  │
                  │  HandleBoost()   │
                  │  HandleDamage()  │
                  │  HandleDeath()   │
                  └──────────────────┘


File Organization:
═══════════════════════════════════════════════════════════════════

Project Root/
│
├─ Assets/
│  │
│  ├─ _Project/
│  │  └─ Scripts/
│  │     └─ Camera/                    (Runtime Scripts)
│  │        ├─ CameraController.cs     (Main component)
│  │        ├─ CameraSettings.cs       (ScriptableObject)
│  │        ├─ CameraPreset.cs         (Data class)
│  │        ├─ CameraControllerExample.cs
│  │        └─ README.md               (Quick setup)
│  │
│  └─ Data/
│     └─ Camera/                       (ScriptableObject Assets)
│        └─ CameraSettings.asset       (Created at runtime)
│
└─ thoughts/
   └─ 30_10_25_IDEA/
      ├─ camera_system.md              (Full documentation)
      └─ camera_architecture.txt       (This file)


Execution Order:
═══════════════════════════════════════════════════════════════════

Frame N:
  ┌─────────────────────────────────────────────────────────┐
  │ 1. Input System                                         │
  │    └─ Gather input (keyboard, mouse)                    │
  └─────────────────────────────────────────────────────────┘
                        ▼
  ┌─────────────────────────────────────────────────────────┐
  │ 2. Update()                                             │
  │    ├─ PlayerInput.Update()   - Process input           │
  │    ├─ PlayerController.Update() - Move player          │
  │    └─ Other game logic                                  │
  └─────────────────────────────────────────────────────────┘
                        ▼
  ┌─────────────────────────────────────────────────────────┐
  │ 3. LateUpdate()                                         │
  │    └─ CameraController.LateUpdate() - Follow player    │
  └─────────────────────────────────────────────────────────┘
                        ▼
  ┌─────────────────────────────────────────────────────────┐
  │ 4. Rendering                                            │
  │    └─ Unity renders scene from camera position         │
  └─────────────────────────────────────────────────────────┘


Memory Layout:
═══════════════════════════════════════════════════════════════════

CameraSettings (ScriptableObject) - ~1KB
├─ Presets array [5] - ~800 bytes
│  └─ Each preset - ~160 bytes
└─ Settings - ~200 bytes

CameraController (MonoBehaviour) - ~1KB
├─ References - ~64 bytes
├─ Current state - ~400 bytes
├─ Velocities - ~100 bytes
└─ Cache - ~100 bytes

Total Memory: ~2KB (minimal footprint)
GC Allocations per Frame: 0 bytes (zero!)


Performance Profile:
═══════════════════════════════════════════════════════════════════

Per Frame Cost:
├─ HandleInput()           ~0.01ms
├─ UpdatePresetTransition() ~0.01ms
├─ UpdateCameraTransform()  ~0.06ms
│  ├─ Vector3 operations    ~0.03ms
│  └─ Quaternion operations ~0.03ms
└─ ApplyCameraSettings()    ~0.01ms

Total: ~0.09ms per frame (0.009% at 60 FPS)

Suitable for:
✓ PC (High-end, Mid-range, Low-end)
✓ Mobile (iOS, Android)
✓ Console (PlayStation, Xbox, Switch)
✓ WebGL
✓ VR/AR (with modifications)
